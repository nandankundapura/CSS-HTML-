<!DOCTYPE html>
<html>
  <head>
    <title>Java Basics: History, Class, Object, Variables</title>
    <link rel="stylesheet" href="javaProgram.css">
  </head>
  <body>
    <h1>Java Basics</h1>

    <h2>History of Java</h2>
    <p class="history">
      <strong>Java</strong> was developed by <em>James Gosling</em> at Sun
      Microsystems in 1995. It was created to be a
      <b>platform-independent</b>, object-oriented programming language that can
      run on any device using the Java Virtual Machine (JVM).
    </p>
    <p class="history">
      Java quickly became popular due to its portability, security, and
      robustness. Today, it is used in web applications, mobile apps, enterprise
      software, and more.
    </p>

    <h2>Class</h2>
    <p class="class-info">
      A <strong>class</strong> is a blueprint or template for creating objects.
      It defines properties (variables) and behaviors (methods).
    </p>
    <p class="class-info">
      <em>Example:</em> A class named <b>Car</b> might have properties like
      <i>color</i> and <i>model</i>, and behaviors like <i>drive()</i> and
      <i>stop()</i>.
    </p>

    <h2>Object</h2>
    <p class="object-info">
      An <strong>object</strong> is an instance of a class. It contains actual
      values for the properties and can use the behaviors.
    </p>
    <p class="object-info">
      <em>Example:</em> If <b>Car</b> is the class, then <i>myCar</i> could be
      an object with color “red” and model “Toyota”.
    </p>

    <h2>Variables</h2>
    <p class="variables">
      <strong>Variables</strong> are used to store data in a program. Each
      variable has a <em>type</em> which defines what kind of data it can hold.
    </p>
    <p class="variables">
      For example, <i>int number = 5;</i>. Variables allow programs to store,
      change, and use data during execution.
    </p>

    <h2>Features of Java</h2>
    <p class="history">
      <strong>Java</strong> is <b>simple</b>, <b>secure</b>, and
      <b>portable</b>. It supports <em>object-oriented programming</em> and
      provides <em>automatic memory management</em>.
    </p>
    <p class="history">
      Other features include <b>robustness</b>, <b>multithreading</b>, and high
      performance through <i>JIT compilation</i>.
    </p>

    <h2>Data Types</h2>
    <p class="variables">
      Java has two main categories: <b>Primitive</b> and <b>Non-Primitive</b>.
    </p>
    <p class="variables">
      <em>Primitive:</em> int, double, char, boolean
    </p>
    <p class="variables">
      <em>Non-Primitive:</em> String, Arrays, Classes, Objects
    </p>

    <h2>Methods</h2>
    <p class="class-info">
      A <strong>method</strong> is a block of code that performs a specific
      task. Methods improve <i>code reusability</i> and <i>readability</i>.
    </p>
    <p class="class-info">
      <em>Example:</em> A <b>Car</b> class may have methods like
      <i>drive()</i> and <i>stop()</i> that define the behavior of the object.
    </p>

    <h2>Example Program Explanation</h2>
    <p class="object-info">
      A simple program in Java contains a <b>class</b> with a
      <i>main()</i> method. Inside it, <em>objects</em> are created and
      <em>methods</em> are called.
    </p>
    <p class="object-info">
      For example, the <b>Car</b> class can create <i>myCar</i> and
      <i>yourCar</i>. Each object can have its own <i>color</i> and
      <i>model</i>.
    </p>
  </body>
</html>
